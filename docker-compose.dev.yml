version: '3.8'

services:
    proxy:
        image: nginx:1.24.0-alpine
        container_name: proxy
        hostname: proxy
        volumes:
            - ./proxy/nginx.dev.conf:/etc/nginx/nginx.conf
        command: /bin/sh -c "nginx -g 'daemon off;'"
        ports:
            - "8080:80"
            - "8443:443"
        depends_on:
            - server
            - client
        networks:
            - app

    client:
        container_name: client
        hostname: client
        build:
            context: '.'
            dockerfile: ./client/docker/Dockerfile
            target: dev
        volumes:
            - ./client:/app
            - /app/node_modules
        environment:
            port: ${CLIENT_DEV_PORT}
        ports:
            - "${CLIENT_DEV_PORT}:${CLIENT_DEV_PORT}"
        depends_on:
            - server
        networks:
            - app

    server:
        container_name: server
        hostname: server
        build:
            context: '.'
            dockerfile: ./server/Dockerfile
            target: dev
        volumes:
            - ./server:/app
            - /app/node_modules
        environment:
            port: ${SERVER_PORT}
        command: npm run start:dev
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        depends_on:
            - postgres
        networks:
            - app

    postgres:
        image: postgres:16-alpine
        container_name: postgres
        hostname: postgres
        shm_size: 128mb
        volumes:
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
            - ./postgres/dumps:/docker-entrypoint-initdb.d/dumps
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "8432:5432"
        networks:
            - app

networks:
    app:
        driver: bridge
